<?php
/**
 * Remove capabilities from editors.
 *
 * Call the function when your plugin/theme is activated.
 */

function doctor_verified_process_reviewer() {
	if(isset($_POST['action']) && $_POST['action'] == 'doctor-verified-reviewer' && wp_verify_nonce($_POST['doctor_verified_reviewer_nonce'], 'doctor-verified-reviewer-nonce')) {

		/*var_dump($_FILES["txtProofOfCertificate"]);
		echo '<br/><br/>';
		var_dump($_FILES["txtPhoto"]);*/

		//var_dump($_POST);
		//return;

		//file_upload($_FILES["txtProofOfCertificate"]);
		//file_upload($_FILES["txtPhotoID"]);

		//return;
	
		global $wpdb;
		global $stripe_options;

		//echo 'doctor_verified_process_reviewer';

		//return;

		$email = isset($_POST["txtEmailID"]) ? trim($_POST["txtEmailID"]) : '';

		// retrieve the token generated by stripe.js		
		//$token = isset($_POST['stripeToken']) ? trim($_POST['stripeToken']) : '';

		// Get the path to the upload directory.
		$wp_upload_dir = wp_upload_dir();
		//$wp_upload_dir['url'] . '/' . basename( $filename );

		//var_dump($wp_upload_dir);

		//return;

		// YOUR CODE: Save the customer ID and other info in a database for later!

		if( !empty($email) ) {

			$user_login = explode('@', $email);

			//echo $user_login[0].$user_login[1];

			$new_user_id = wp_insert_user(array(
					'first_name'		=> $_POST["txtFirstName"],
					'last_name'			=> $_POST["txtLastName"],
					'user_login'		=> trim($user_login[0].$user_login[1]),
					'description'       => $_POST["txtBiography"],
					'user_email'		=> $email,
					'user_pass'	 		=> trim($_POST["txtNewPassword"]),
					'user_registered'	=> date('Y-m-d H:i:s'),
					'role'				=> 'doctor_verified_reviewer'
				)
			);

		} else {

			wp_die('Please complete the form.');	

		}

		//print_r($new_user_id);

		//exit;

		if($new_user_id) {
			
			//txtProfession
			//textContactNumber
			//txtProofOfCertificate
			//txtPhotoID

			//txtAddress
			//txtCity
			//txtPostCode
			//txtCountry

			if (isset($_POST["txtProfession"])) {				
				/*$meta_value = array(
				    	'reviewer_profession' => $_POST["txtProfession"]
				    );*/

				update_user_meta($new_user_id, 'reviewer_profession', trim($_POST["txtProfession"]));
				//add_user_meta($new_user_id, 'reviewer_profession', $meta_value);
			}


			if (isset($_POST["txtAddress"])) {				
				/*$meta_value = array(
				    	'reviewer_address' => $_POST["txtAddress"]
				    );*/

				update_user_meta($new_user_id, 'reviewer_address', trim($_POST["txtAddress"]));
				//add_user_meta($new_user_id, 'reviewer_address', $meta_value);
			}


			if (isset($_POST["txtCity"])) {				
				/*$meta_value = array(
				    	'reviewer_city' => $_POST["txtCity"]
				    );*/

				update_user_meta($new_user_id, 'reviewer_city', trim($_POST["txtCity"]));
				//add_user_meta($new_user_id, 'reviewer_city', $meta_value);
			}


			if (isset($_POST["txtPostCode"])) {				
				/*$meta_value = array(
				    	'reviewer_postcode' => $_POST["txtPostCode"]
				    );*/

				update_user_meta($new_user_id, 'reviewer_postcode', trim($_POST["txtPostCode"]));
				//add_user_meta($new_user_id, 'reviewer_postcode', $meta_value);
			}


			if (isset($_POST["txtCountry"])) {				
				/*$meta_value = array(
				    	'reviewer_country' => $_POST["txtCountry"]
				    );*/

				update_user_meta($new_user_id, 'reviewer_country', trim($_POST["txtCountry"]));
				//add_user_meta($new_user_id, 'reviewer_country', $meta_value);
			}

			if (isset($_POST["textContactNumber"])) {				
				/*$meta_value = array(
				    	'reviewer_contact_number' => $_POST["textContactNumber"]
				    );*/			

				update_user_meta($new_user_id, 'reviewer_contact_number', trim($_POST["textContactNumber"]));
				//add_user_meta($new_user_id, 'reviewer_contact_number', $meta_value);
			}		

			if (isset($_FILES["txtProofOfCertificate"])) {


				//var_dump($_FILES["txtProofOfCertificate"]);
				$upload = file_upload($_FILES['txtProofOfCertificate']);

				update_user_meta($new_user_id, 'reviewer_proof_of_certificate_file', trim($upload['file']));
				update_user_meta($new_user_id, 'reviewer_proof_of_certificate_url', trim($upload['url']));

				/*$meta_value = array(
				    	'reviewer_proof_of_certificate' => $_POST["txtProofOfCertificate"]
				    );*/

				//add_user_meta($new_user_id, 'reviewer_proof_of_certificate_file', $meta_value);
				//add_user_meta($new_user_id, 'reviewer_proof_of_certificate_url', $meta_value);

			}

			if (isset($_FILES["txtPhotoID"])) {		


				//var_dump($_FILES["txtPhotoID"]);
				$upload = file_upload($_FILES['txtPhotoID']);

				update_user_meta($new_user_id, 'reviewer_photo_file', trim($upload['file']));
				update_user_meta($new_user_id, 'reviewer_photo_url', trim($upload['url']));


				//update_user_meta($new_user_id, 'reviewer_photo_id', trim($_POST["txtPhotoID"]));

				/*$meta_value = array(
				    	'reviewer_photo_id' => $_POST["txtPhotoID"]
				    );*/				
				//add_user_meta($new_user_id, 'reviewer_photo_id', $meta_value);
			}						

			//http://stackoverflow.com/questions/4183228/how-to-insert-serialized-data-into-database
			// Save to web_seal table
			$user_id = $new_user_id;
			//$seal_status = 'pending';
			//$seal_domain = trim($_POST["txtDomain"]);
			//$seal_type = 'doctor verified';
			//$seal_language = trim($_POST["textLanguage"]);
			//$seal_coupon_code = !empty($coupon_arr) ? base64_encode(serialize($coupon_arr)) : '';
			//$seal_coupon_code = '';
			//$seal_issued_on = date('Y-m-d H:i:s');
			//$created_at  = date('Y-m-d H:i:s');
			//$updated_at = date('Y-m-d H:i:s');

			//doctor_verified_save_to_web_seal($user_id, $seal_status, $seal_domain, $seal_type, $seal_language, $seal_coupon_code, $seal_issued_on, $created_at, $updated_at);

			

			/*$table = $wpdb->prefix . 'web_seals';

			$data = array( 
			               'user_id' => $user_id,
						   'seal_status' => $seal_status,
						   'seal_domain' => $seal_domain,
						   'seal_type' => $seal_type,
						   'seal_language' => $seal_language,
						   'is_additional_domain' => false,
						   'seal_coupon_code' => $seal_coupon_code,
						   'customer_id' => $customer_id,
						   'seal_issued_on' => $seal_issued_on,							   
						   'created_at' => $created_at,
						   'updated_at' => $updated_at
						 );

			$format = array( '%d', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s' );

			$wpdb->insert( $table, $data, $format );*/


			// send an email to the admin alerting them of the registration
			//wp_new_user_notification($new_user_id);
			
			// log the new user in
			//wp_setcookie($user_login, $user_pass, true);
			//wp_set_current_user($new_user_id, $user_login);	
			//do_action('wp_login', $user_login);
			
			// send the newly created user to the home page after logging them in
			//wp_redirect(home_url()); exit;
		//}


		// YOUR CODE: When it's time to charge the customer again, retrieve the customer ID!


		//$r = $_POST["one_time_setup_fee"].','.$_POST["monthly_service_fee"].','.$_POST["total_charge_today"];
		//$r = array("one_time_setup_fee" => $_POST["one_time_setup_fee"], "monthly_service_fee" => $_POST["monthly_service_fee"], "total_charge_today" => $_POST["total_charge_today"]);

		// redirect on successful reviewer
		//$redirect = add_query_arg('reviewer', 'paid', $_POST['redirect']);
		$redirect = add_query_arg(array(
								    'reviewer' => 'true'
								    //'r' => base64_encode(serialize($r)),
								), $_POST['redirect']);

		wp_redirect($redirect); 
		exit;

		} //else {

				//wp_die($e);
				// redirect on failed reviewer
				/*$redirect = add_query_arg('reviewer', 'false', $_POST['redirect']);

				wp_redirect($redirect); 
				exit;*/
				//echo 'failed';

	}



}
add_action('init', 'doctor_verified_process_reviewer');